# generated by datamodel-codegen:
#   filename:  https://raw.githubusercontent.com/openid/oid4vc-haip-sd-jwt-vc/main/schemas/presentation_definition.json
#   timestamp: 2023-12-04T10:39:42+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, List, Optional, Union, Annotated

from pydantic import BaseModel, Extra, Field, conint, RootModel


class LimitDisclosure(Enum):
    required = 'required'
    preferred = 'preferred'


class Constraints(BaseModel):
    class Config:
        extra = Extra.forbid

    limit_disclosure: Optional[LimitDisclosure] = None
    fields: Optional[List[Any]] = None


class PresentationDefinitionClaimFormatDesignations1(BaseModel):
    class Config:
        extra = Extra.forbid

    alg: Optional[List[str]] = Field(None, min_items=1)


class PresentationDefinitionClaimFormatDesignations2(BaseModel):
    class Config:
        extra = Extra.forbid

    proof_type: Optional[List[str]] = Field(None, min_items=1)


class PresentationDefinitionClaimFormatDesignations(RootModel):
    class Config:
        extra = Extra.forbid

    root: Union[
        Dict[
            Annotated[str, Field(pattern=r'^jwt$|^jwt_vc$|^jwt_vp$')],
            PresentationDefinitionClaimFormatDesignations1,
        ],
        Dict[
            Annotated[str, Field(pattern=r'^ldp_vc$|^ldp_vp$|^ldp$')],
            PresentationDefinitionClaimFormatDesignations2,
        ],
    ] = Field(..., title='Presentation Definition Claim Format Designations')


class Rule(Enum):
    pick = 'pick'


class SubmissionRequirement(BaseModel):
    class Config:
        extra = Extra.forbid

    name: Optional[str] = None
    rule: Rule
    count: Optional[conint(ge=1)] = None
    from_: str = Field(..., alias='from')


class InputDescriptor(BaseModel):
    class Config:
        extra = Extra.forbid

    id: str
    name: Optional[str] = None
    purpose: Optional[str] = None
    format: Optional[PresentationDefinitionClaimFormatDesignations] = None
    group: Optional[List[str]] = None
    constraints: Constraints


class PresentationDefinition(BaseModel):
    class Config:
        extra = Extra.forbid

    id: str
    input_descriptors: List[InputDescriptor]
    submission_requirements: Optional[List[SubmissionRequirement]] = None

